getwd()
setwd("./Lab2")
load("more/kobe.RData")
head(kobe)
kobe$basket[1:9]
kobe_streak <- calc_streak(kobe$basket)
barplot(table(kobe_streak))
outcomes <- c("heads", "tails")
sample(outcomes, size = 1, replace = TRUE)
sample(outcomes, 1, replace=TRUE)
sample(outcomes, 1, replace=TRUE)
sample(outcomes, 1, replace=TRUE)
sample(outcomes, 1, replace=TRUE)
sample(outcomes, 1, replace=TRUE)
sim_fair_coin <- sample(outcomes, size = 100, replace = TRUE)
table(sim_fair_coin)
sim_fair_coin <- sample(outcomes, size = 1000, replace = TRUE)
table(sim_fair_coin)
sim_fair_coin <- sample(outcomes, size = 10000, replace = TRUE)
table(sim_fair_coin)
sim_fair_coin <- sample(outcomes, size = 1000000, replace = TRUE)
table(sim_fair_coin)
406/100000
sim_unfair_coin <- sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8))
table(sim_unfair_coin)
outcomes <- c("H", "M")
sim_basket <- sample(outcomes, size = 1, replace = TRUE)
sim_basket <- sample(outcomes, size = 133, replace = TRUE, prob = c(.45,          .55))
table(outcomes)
table(sim_basket)
kobe$basket
sim_basket
talbe(kobe$basket)
table(kobe$basket)
table(sim_basket)
table(sim_basket)
?calc_streak
calc_streak(sim_basket)
sim_streak <- calc_streak(sim_basket)
barplot(table(sim_streak))
kobe_streak <- calc_streak(kobe$basket)
barplot(table(kobe_streak))
str(kobe)
barplot(table(sim_streak))
kobe_streak <- calc_streak(kobe$basket)
barplot(table(kobe_streak))
barplot(table(sim_streak))
kobe_streak <- calc_streak(kobe$basket)
barplot(table(kobe_streak))
barplot(table(sim_streak))
kobe_streak <- calc_streak(kobe$basket)
barplot(table(kobe_streak))
barplot(table(sim_streak))
library('IS606')
?str_extract
?str_extract()
library'stringr'
library('stringr')
?str_extract()
?unlist()
string_a <- "[0-9]+\\$"
example1 <- "this is just a sentence"
str_extract(example1, string_a)
str_extract("993839\", string_a)
)
))
"
)
str_extract("993839\\", string_a)
str_extract("993839", string_a)
str_extract("993839$", string_a)
str_extract("993839$hello", string_a)
str_extract("hey you", "\\b[a-z]{1,4}\\b")
str_extract("heye you", "\\b[a-z]{1,4}\\b")
str_extract("heyee you", "\\b[a-z]{1,4}\\b")
str_extract("heyee you", ".*?\\.txt$")
str_extract("jabroni.txt", ".*?\\.txt$")
str_extract("jabronitxt", ".*?\\.txt$")
str_extract("know your role blvd jabroni.txt", ".*?\\.txt$")
str_extract(".txt", ".*?\\.txt$")
str_extract("txt", ".*?\\.txt$")
str_extract("jabronitxt", ".*?\\.txt$")
str_extract("jabronitxt", "\\d{2}/\\d{2}/\\d{4}")
str_extract("12/12/1999", "\\d{2}/\\d{2}/\\d{4}")
str_extract("12/12/1999", "<(.+?)>.+?</\\1>")
str_extract("<hello>kdjfkja<hello>", "<(.+?)>.+?</\\1>")
str_extract("<hello>kdjfkja</hello>", "<(.+?)>.+?</\\1>")
str_extract("398$hello", "[0-9]+\\$")
str_extract("398$hello", "\\d")
str_extract("398$hello", "\\d"{1,})
str_extract("398$hello", "\\d{1,}")
str_extract("398$hello", "\\d{1,}[$]")
?string_replace
?string_replace()
?str_replace()
str_replace("chunkylover53[at]aol[dot]com", ".")
?str_replace()
fruits <- c("one apple", "two pears", "three bananas")
str_replace(fruits, "[aeiou]", "-")
str_replace_all(fruits, "[aeiou]", "-")
str_replace_all("chunkylover53[at]aol[dot]com", "\\[at\\]", "@")
str_replace("chunkylover53[at]aol[dot]com", "\\[at\\]", "@")
str_replace("chunkylover53[at]aol[dot]com", "\\[dot\\]", ".")
str_extract()email <- "chunkylover53[at]aol[dot]com"
email <- str_replace(email, "\\[at\\]", "@" )
email <- str_replace(email, "\\[dot\\]", ".")
email
email <- "chunkylover53[at]aol[dot]com"
email <- str_replace(email, "\\[at\\]", "@" )
email <- str_replace(email, "\\[dot\\]", ".")
email
str_extract(email, "[:digit]")
str_extract(email, "[:digit:]")
str_extract(email, "[[:digit:]]")
str_extract_all(email, "[[:digit:]]")
str_extract_all(email, "\\D")
str_extract_all(email, "\\d")
html_string <- "<title>+++BREAKING NEWS+++</title>"
str_extract(html_string, "<.+>")
str_extract(html_string, "<.+?>")
binomial_str <- "(5-3)^2=5^2-2*5*3+3^2 conforms to the binomial theorem."
st_extract(binomial_str, "[^0-9=+*()]+")
str_extract(binomial_str, "[^0-9=+*()]+")
str_extract(binomial_str, "[^[:digit:]=+*()]+")
str_extract(binomial_str, "[0-9=+*()^-]+")
setwd("~/Data Science/Fall 2015/IS 607 Data Acquisition and Management/Project 1")
chess_table <- readLines("tournamentinfo.txt")
tail(chess_table)
str(chess_table)
chess_table[5]
library(stringr)
seeifitworks <- str_extract(chess_table, "\\d{1,2}")
str(seeifitworks)
seeifitworks <- str_extract(chess_table, "\\d{1,2}.+")
head(seeifitworks)
seeifitworks <- str_extract(chess_table, "^\\s+\\d{1,2}.+")
head(seeifitworks)
seeifitworks <- str_extract(chess_table, "\\d{1,2}.+")
type1 <- lapply(str_detect(chess_table, "^\\s+\\d{1,2}.+"))
type1 <- lapply(chess_table, str_detect, )
type1 <- lapply(chess_table, str_detect, pattern = "^\\s+\\d{1,2}.+")
head(type1)
unlist1 <- unlist(type1)
head(unlist1)
str(type1)
first_line <- unlist(lapply(chess_table, str_detect,
pattern = "^\\s+\\d{1,2}.+"))
str(first_line)
summary(first_line)
second_line <- unlist(lapply(chess_table, str_detect,
pattern = "^\\s+[[:upper:]]{2}.+"))
str(second_line)
summary(second_line)
chess_data <- as.data.frame(chess_table, c("lines"))
str(chess_data)
chess_data <- as.data.frame(chess_table, stringsAsFactors = FALSE)
str(chess_data)
colnames(chess_data) <- "characters"
str(chess_data)
head(chess_data)
chess_data <- as.data.frame(chess_table, stringsAsFactors = FALSE)
colnames(chess_data) <- "characters"
head(chess_data)
chess_data <- data.frame(chess_table, first_line, second_line, stringsAsFactors = FALSE)
str(chess_data)
first_vector <- subset(chess_data$chess_table, first_line == TRUE)
head(first_vector)
second__vector <- subset(chess_data$chess_table, second_line == TRUE)
1 <- c("a", "b", "c")
number1 <- c("a", "b", "c")
number2 <- c("a", "b", "c")
number 1 +number2
number1 +number2
number1 + number2
player_ids <- 1:64
tourny_data <- data.frame(player_ids, first_vector, second_vector)
second_vector <- subset(chess_data$chess_table, second_line == TRUE)
tourny_data <- data.frame(player_ids, first_vector, second_vector)
str(tourney_data)
str(tourny_data)
tourny_data <- data.frame(player_ids, first_vector, second_vector, stringsAsFactors = FALSE)
str(tourny_data)
tourny_data <- data.frame(1:64, first_vector, second_vector, stringsAsFactors = FALSE)
str(tourny_data)
tourny_data[1,]
tourny_data <- data.frame(ID=1:64, first_vector, second_vector, stringsAsFactors = FALSE)
str(tourny_data)
tourny_data <- data.frame(ID=1:64, line1, line2, stringsAsFactors = FALSE)
tourny_data <- data.frame(ID=1:64, line1 = first_vector, line2 = second_vector, stringsAsFactors = FALSE)
str(tourny_data)
str_extract(tourny_data$line1, "")
str_extract(tourny_data$line1, "\\b[[:upper:]]\\b+")
str_extract(tourny_data$line1, "\\b[[:upper:]]+\\b")
str_extract(tourny_data$line1, "(\\b[[:upper:]]+\\b)")
str_extract(tourny_data$line1, "(\\b[[:upper:]]+\\b)+")
str_extract(tourny_data$line1, "(\\b[[:upper:]]+\\b+")
str_extract(tourny_data$line1, "(\\b[[:upper:]]+\\b")
str_extract(tourny_data$line1, "\\b[[:upper:]]+\\b+")
str_extract(tourny_data$line1, "\\b[[:upper:]]+\\b\s")
str_extract(tourny_data$line1, "\\b[[:upper:]]+\\b\\s")
str_extract_all(tourny_data$line1[1], "\\b[[:upper:]]+\\b\\s")
str_extract(tourny_data$line1[1], "\\b[[:upper:]]+\\b\\s")
str_extract(tourny_data$line1[1], "(\\b[[:upper:]]+\\b\\s){1,4}")
str_extract(tourny_data$line1[28], "(\\b[[:upper:]-]+\\b\\s){1,4}")
str_extract(tourny_data$line1[59], "(\\b[[:upper:]-]+\\b\\s){1,4}")
tourny_data[,"player name"] <- str_extract(tourny_data$line1,
"(\\b[[:upper:]-]+\\b\\s){1,4}")
str(tourny_data$`player name`)
tourny_data$`player name`[46]
str_extract(tourny_data$line1[59], "(\\b[[:upper:]-]+\\b\\s)+(\\b[[:upper:]-]+\\b)?")
str_extract(tourny_data$line1[59], "(\\b[[:upper:]-]+\\b\\s)+?(\\b[[:upper:]-]+\\b)?")
str_extract(tourny_data$line1[59], "(\\b[[:upper:]-]+\\b\\s)+(\\b[[:upper:]-]+\\b){1}")
str_extract(tourny_data$line1[51], "(\\b[[:upper:]-]+\\b\\s)+(\\b[[:upper:]-]+\\b){1}")
str_extract(tourny_data$line1[63], "(\\b[[:upper:]-]+\\b\\s)+(\\b[[:upper:]-]+\\b){1}")
str_extract(tourny_data$line1[43], "(\\b[[:upper:]-]+\\b\\s)+(\\b[[:upper:]-]+\\b){1}")
str_extract(tourny_data$line1[28], "(\\b[[:upper:]-]+\\b\\s)+(\\b[[:upper:]-]+\\b){1}")
str(tourny_data)
tourny_data[,"player name"] <- str_extract(tourny_data$line1,
"(\\b[[:upper:]-]+\\b\\s)+
(\\b[[:upper:]-]+\\b){1}")
str_extract(tourny_data$line1[28], "(\\b[[:upper:]-]+\\b\\s)+(\\b[[:upper:]-]+\\b){1}")
tourny_data$`player name` <- NULL
tourny_data[,player_name] <- str_extract(tourny_data$line1,
"(\\b[[:upper:]-]+\\b\\s)+
(\\b[[:upper:]-]+\\b){1}")
tourny_data[,'player_name'] <- str_extract(tourny_data$line1,
"(\\b[[:upper:]-]+\\b\\s)+
(\\b[[:upper:]-]+\\b){1}")
tourny_data[,player_name] <- str_extract(tourny_data$line1,
"(\\b[[:upper:]-]+\\b\\s)+(\\b[[:upper:]-]+\\b){1}")
tourny_data[,"player_name"] <- str_extract(tourny_data$line1,
"(\\b[[:upper:]-]+\\b\\s)+
(\\b[[:upper:]-]+\\b){1}")
(\\b[[:upper:]-]+\\b){1}")
str_extract(tourny_data$line1[28], "(\\b[[:upper:]-]+\\b\\s)+(\\b[[:upper:]-]+\\b){1}")
str_extract(tourny_data$line1, "(\\b[[:upper:]-]+\\b\\s)+(\\b[[:upper:]-]+\\b){1}")
tourny_data[,"player_name"] <- str_extract(tourny_data$line1, "(\\b[[:upper:]-]+\\b\\s)+(\\b[[:upper:]-]+\\b){1}")
tourny_data[state] <- str_extract(tourny_data$line2, "[[:upper:]]{2}" )
tourny_data[,'state'] <- str_extract(tourny_data$line2, "[[:upper:]]{2}" )
summary(tourny_data$state)
str(tourny_data$state)
tourny_data[,"points"] <- str_extract(tourny_data$line1, "\\d(.)\\d")
tourny_data[,"points"] <- as.numeric(str_extract(tourny_data$line1, "\\d(.)\\d"))
str(tourny_data$points)
summary(tourny_data$points)
tourny_data[,"pre-rating"] <- as.numeric(str_extract(tourny_data$line2,
"\\b(\\d){3,4}\\b"))
tourny_data$`pre-rating`[8]
tourny_data[,"pre-rating"] <- as.numeric(str_extract(tourny_data$line2,
"\\b(\\d){3,4}(?=\\bp)"))
tourny_data[,"pre-rating"] <- as.numeric(str_extract(tourny_data$line2,
"\\b(\\d){3,4}(?=p)"))
"\\b\\d(?=p)"))
tourny_data[,"pre-rating"] <- as.numeric(str_extract(tourny_data$line2,
"\\b\\d(?=p)"))
tourny_data[,"pre-rating"] <- as.numeric(str_extract(tourny_data$line2,
"\\b(\\d){3,4}"))
tourny_data[,"pre-rating"] <- as.numeric(str_extract(tourny_data$line2,
"\\b(\\d){3,4}\\b"))
tourny_data$`pre-rating`<- NULL
tourny_data[,"pre_rating"] <- as.numeric(str_extract(tourny_data$line2,
"\\b(\\d){3,4}\\b"))
tourny_data[,"ppre_rating"] <-as.numeric(str_extract(tourny_data$line2, "\\b\\d+(?=p)"))
tourny_data[,"ppre_rating"] <-as.numeric(str_extract(tourny_data$line2, "\\b\\d(?=p)"))
tourny_data[,"ppre_rating"] <-as.numeric(str_extract(tourny_data$line2, "\\b[1234567890](?=p)"))
str_extract()?
tourny_data[,"ppre_rating"] <-as.numeric(str_extract(tourny_data$line2, "\\b[1234567890](?=p)", perl = TRUE))
tourny_data[,"ppre_rating"] <-as.numeric(str_extract(tourny_data$line2, perl("\\b[1234567890](?=p)"))
)
tourny_data[,"ppre_rating"] <-as.numeric(str_extract(tourny_data$line2, perl("\\b[1234567890]{3,4}(?=p)")))
tourny_data[,"ppre_rating"] <-as.numeric(str_extract(tourny_data$line2, perl("\\b\\d{3,4}(?=p)")))
tourny_data[,"ppre_rating"] <-as.numeric(str_extract(tourny_data$line2, perl("\\b\\d{3,4}(?=P)")))
tourny_data$ppre_rating[8]
tourny_data$ppre_rating[15]
pratings <- subset(tourny_data$pre_rating, pre_rating == NA)
pratings <- subset(tourny_data, pre_rating == NA)
head(tourny_data$pre_rating)
tail(tourny_data$pre_rating)
tourny_data[tourny_data$pre_rating == NA, ]
tourny_data[tourny_data$pre_rating == 'NA', ]
tourny_data[tourny_data$pre_rating == 'NA']
tourny_data[,tourny_data$pre_rating == 'NA']
?subset
tourny_data[pre_rating == 'NA',]
tourny_data[tourny_data$pre_rating == NA,]
subset(tourny_data, pre_rating == NA)
str(tourny_data)
subset(tourny_data, pre_rating == NA)
subset(tourny_data, ID == 1)
summary(tourny_data$pre_rating)
subset(tourny_data, is.na(pre_rating))
tourny_data[is.na(tourny_data$pre_rating),]
tourny_data[is.na(tourny_data$pre_rating), "pre_rating"] <- as.numeric(str_extract(
tourny_data$line2,
perl("\\b\\d{3,4}(?=P)")))
tourny_data[is.na(tourny_data$pre_rating), "pre_rating"] <- as.numeric(str_extract(
subset(tourny_data$line2, is.na(tourny_data$pre_rating)),
perl("\\b\\d{3,4}(?=P)")))
tourny_data[is.na(tourny_data$pre_rating), "pre_rating"]
tourny_data[15]
tourny_data[15,]
tourny_data[15,7]
tourny_data[37,7]
str_extract_all(tourny_data$line1[1], "(|)[WLDHUB]//s")
str_extract_all(tourny_data$line1[1], "[WLDHUB]//s")
str_extract_all(tourny_data$line1[1], "[WLDHUB]")
str_extract_all(tourny_data$line1[1], "[WLDHUB]//b")
str_extract_all(tourny_data$line1[1], "[WLDHUB]{1}//b")
str_extract_all(tourny_data$line1[1], "[WLDHUB]{1}\>")
str_extract_all(tourny_data$line1[1], "[WLDHUB]{1}/\>")
str_extract_all(tourny_data$line1[1], "[WLDHUB]{1}\\>")
str_extract_all(tourny_data$line1[7], "[WLDHUB]{1}\\>")
str_extract_all(tourny_data$line1[7], "(|)[WLDHUB]{1}\\>")
str_extract_all(tourny_data$line1[7], "(|)[WLDHUB]{1}\\>")
str_extract_all(tourny_data$line1[7], "|[WLDHUB]{1}\\>")
str_extract_all(tourny_data$line1[7], "(?<=|)[WLDHUB]{1}\\>")
str_extract_all(tourny_data$line1[7], perl("(?<=|)[WLDHUB]{1}\\>")
)
str_extract_all(tourny_data$line1[7], perl("(?<=|)[WLDHUB]{1}\\>")
)
str_extract_all(tourny_data$line1[7], "\\<//d{1,2}")
str_extract_all(tourny_data$line1[7], "(//d){1,2}")
str_extract_all(tourny_data$line1[7], "(\\d){1,2}")
str_extract_all(tourny_data$line1[7], "\\b(\\d){1,2}")
str_extract_all(tourny_data$line1[7], "\\s(\\d){1,2}")
str_extract_all(tourny_data$line1[7], perl("(\\d){1,2}"(?=|)))
str_extract_all(tourny_data$line1[7], perl("(\\d){1,2}(?=|)"))
str_extract_all(tourny_data$line1[7], perl("(\\d){1,2}(?=(|)"))
str_extract_all(tourny_data$line1[7], perl("(\\d){1,2}(?=|)"))
str_extract_all(tourny_data$line1[7], perl("(\\d){1,2}(?=(|))"))
str_extract_all(tourny_data$line1[7], perl("(\\d){1,2}(?=|)"))
str_extract_all(tourny_data$line1[7], perl("(\\d){1,2}(?=[|])"))
str_extract_all(tourny_data$line1[44], perl("(\\d){1,2}(?=[|])"))
str(str_extract_all(tourny_data$line1, perl("(\\d){1,2}(?=[|])")))
tourney_data[,"opponents"] <- as.numeric(str_extract_all(tourny_data$line1, perl("(\\d){1,2}(?=[|])")))
tourney_data[,"opponents"] <- as.numeric(unlist(str_extract_all(tourny_data$line1, perl("(\\d){1,2}(?=[|])"))))
tourny_data[,"opponents"] <- as.numeric(unlist(str_extract_all(tourny_data$line1, perl("(\\d){1,2}(?=[|])"))))
tourny_data[,"opponents"] <- str_extract_all(tourny_data$line1, perl("(\\d){1,2}(?=[|])"))
opponents <- str_extract_all(tourny_data$line1, perl("(\\d){1,2}(?=[|])"))
str(oponents)
str(opponents)
str(unlist(opponents))
?cbind
cbind(tourney_data, opponents)
cbind(tourny_data, opponents)
mean(opponents)
tourny_data[,"opponents"] <- as.numeric(str_extract_all(tourny_data$line1, perl("(\\d){1,2}(?=[|])")))
merge
?merge
lapply(opponents, mean)
opponents <- lapply(opponents, as.numeric)
str(opponents)
str(unlist(opponents))
opponents[1]
opponents[[1]]
length(opponents[[1]])
opponents[1][1]
opponents[1][1][1]
str(opponents[1])
str(opponents[[1]])
str(opponents)
avg_score_lookup <- function(opponents) {
num_of_opponents <- length(opponents)
for (i in num_of_opponents){
print(opponents[i])
}
}
avg_score_lookup(opponents[[1]])
avg_score_lookup(opponents[[1]])
avg_score_lookup <- function(opponents) {
num_of_opponents <- length(opponents)
for (i in num_of_opponents){
print(tourney_data[opponents[i], player_name])
}
}
avg_score_lookup(opponents[[1]])
avg_score_lookup <- function(opponents) {
num_of_opponents <- length(opponents)
for (i in num_of_opponents){
print(tourny_data[opponents[i], player_name])
}
}
avg_score_lookup <- function(opponents) {
num_of_opponents <- length(opponents)
for (i in num_of_opponents){
print(tourny_data[opponents[i], player_name])
}
}
avg_score_lookup(opponents[[1]])
avg_score_lookup <- function(opponents) {
num_of_opponents <- length(opponents)
for (i in num_of_opponents){
print(tourny_data[opponents[i], "player_name"])
}
}
avg_score_lookup(opponents[[1]])
avg_score_lookup <- function(opponents) {
num_of_opponents <- length(opponents)
for (i in num_of_opponents){
print(tourny_data[opponents[i], "pre_rating"])
}
}
avg_score_lookup(opponents[[1]])
avg_score_lookup <- function(opponents) {
num_of_opponents <- length(opponents)
total_rating <- 0
for (i in num_of_opponents){
total_rating <- total_rating + tourny_data[opponents[i], "pre_rating"]
}
return(total_rating)
}
avg_score_lookup(opponents[[1]])
avg_score_lookup <- function(opponents) {
num_of_opponents <- length(opponents)
total_rating <- 0
print(opponents)
for (i in num_of_opponents){
total_rating <- total_rating + tourny_data[opponents[i], "pre_rating"]
}
return(total_rating)
}
avg_score_lookup(opponents[[1]])
source('~/Data Science/Fall 2015/IS 607 Data Acquisition and Management/Project 1/project_1(chess).r')
avg_score_lookup(opponents[[1]])
source('~/Data Science/Fall 2015/IS 607 Data Acquisition and Management/Project 1/project_1(chess).r')
avg_score_lookup(opponents[[1]])
source('~/Data Science/Fall 2015/IS 607 Data Acquisition and Management/Project 1/project_1(chess).r')
avg_score_lookup(opponents[[1]])
source('~/Data Science/Fall 2015/IS 607 Data Acquisition and Management/Project 1/project_1(chess).r')
avg_score_lookup(opponents[[1]])
str(opponents[[1]])
source('~/Data Science/Fall 2015/IS 607 Data Acquisition and Management/Project 1/project_1(chess).r')
source('~/Data Science/Fall 2015/IS 607 Data Acquisition and Management/Project 1/project_1(chess).r')
source('~/Data Science/Fall 2015/IS 607 Data Acquisition and Management/Project 1/project_1(chess).r')
str(opponents[[1]])
avg_score_lookup(opponents[[1]])
source('~/Data Science/Fall 2015/IS 607 Data Acquisition and Management/Project 1/project_1(chess).r')
avg_score_lookup(opponents[[1]])
source('~/Data Science/Fall 2015/IS 607 Data Acquisition and Management/Project 1/project_1(chess).r')
avg_score_lookup(opponents[[1]])
source('~/Data Science/Fall 2015/IS 607 Data Acquisition and Management/Project 1/project_1(chess).r')
avg_score_lookup(opponents[[1]])
source('~/Data Science/Fall 2015/IS 607 Data Acquisition and Management/Project 1/project_1(chess).r')
avg_score_lookup(opponents[[1]])
source('~/Data Science/Fall 2015/IS 607 Data Acquisition and Management/Project 1/project_1(chess).r')
avg_score_lookup(opponents[[1]])
source('~/Data Science/Fall 2015/IS 607 Data Acquisition and Management/Project 1/project_1(chess).r')
avg_score_lookup(opponents[[1]])
source('~/Data Science/Fall 2015/IS 607 Data Acquisition and Management/Project 1/project_1(chess).r')
avg_score_lookup(opponents[[1]])
source('~/Data Science/Fall 2015/IS 607 Data Acquisition and Management/Project 1/project_1(chess).r')
avg_score_lookup(opponents[[1]])
source('~/Data Science/Fall 2015/IS 607 Data Acquisition and Management/Project 1/project_1(chess).r')
source('~/Data Science/Fall 2015/IS 607 Data Acquisition and Management/Project 1/project_1(chess).r')
avg_score_lookup(opponents[[1]])
source('~/Data Science/Fall 2015/IS 607 Data Acquisition and Management/Project 1/project_1(chess).r')
avg_score_lookup(opponents[[1]])
print(opponents[[1]])
tourny_data[39,"pre_rating"]
tourny_data[,"pre_rating"] <- as.numeric(str_extract(tourny_data$line2,
"\\b(\\d){3,4}\\b"))
tourny_data[39,"pre_rating"]
tourny_data[is.na(tourny_data$pre_rating),
"pre_rating"]
tourny_data[39,]
as.numeric(
str_extract(
subset(
tourny_data$line2,
is.na(tourny_data$pre_rating)),
perl("\\b\\d{3,4}(?=P)")))
source('~/Data Science/Fall 2015/IS 607 Data Acquisition and Management/Project 1/project_1(chess).r')
print(opponents[[1]])
avg_score_lookup(opponents[[1]])
source('~/Data Science/Fall 2015/IS 607 Data Acquisition and Management/Project 1/project_1(chess).r')
avg_score_lookup(opponents[[1]])
lapply(opponents, avg_score_lookup)
unlist(lapply(opponents, avg_score_lookup))
tourny_data[,"avg_opp_prerate"] <- unlist(lapply(opponents, avg_score_lookup))
head(tourney_data[1,4:8])
head(tourny_data[4:8])
tail(tourny_data[4:8])
source('~/Data Science/Fall 2015/IS 607 Data Acquisition and Management/Project 1/project_1(chess).r')
source('~/Data Science/Fall 2015/IS 607 Data Acquisition and Management/Project 1/project_1(chess).r')
tail(tourny_data[4:8])
source('~/Data Science/Fall 2015/IS 607 Data Acquisition and Management/Project 1/project_1(chess).r')
tourney_data[,pre_rating2]
tourny_data[,pre_rating2]
tourny_data[,"pre_rating2"]
tourny_data[39,"pre_rating2"]
source('~/Data Science/Fall 2015/IS 607 Data Acquisition and Management/Project 1/project_1(chess).r')
tourny_data[1,4:8]
source('~/Data Science/Fall 2015/IS 607 Data Acquisition and Management/Project 1/project_1(chess).r')
chess_csv <- tourny_data[,4:8]
str(chess_csv)
head(chess_csv)
?write.csv
write.csv(chess_csv, "chess_data.csv")
summary(chess_csv$state)
table(chess_csv$state)
IQR(ches_csv$pre_rating)
?iqr
IQR(chess_csv$pre_rating)
table(chess_csv$pre_rating)
?table
hist(chess_csv$pre_rating)
hist(chess_csv$pre_rating, breaks = 50)
hist(chess_csv$pre_rating, breaks = 30)
hist(chess_csv$pre_rating, breaks = 20)
hist(chess_csv$pre_rating, breaks = 25)
summary(chess_csv$pre_rating)
boxplot(chess_csv$pre_rating)
