if (false) {
gop <- readHTMLTable('http://www.realclearpolitics.com/epolls/2016/president/
us/2016_republican_presidential_nomination-3823.html#polls')
gop_data <- gop[[6]]
vector_to_num <- function(dataframe, column) {
dataframe$column <- as.numeric()
}
}
gop <- read.csv('gop.csv', na.strings = "--")
#get rid of last years data, because theres no year value
gop <- gop[1:82,]
#
gop <- gather(gop, candidate, points, Trump:Pataki)
#drop the spread column
gop <- cbind(gop[1:2], gop[4:5])
#get the dates in an enddate, thus more usable format
gop$Date <- str_extract(gop$Date, "[[:digit:]]{1,2}/[[:digit:]]{1,2}$")
#change points to numeric
gop$points <- as.numeric(gop$points)
gop$date <- strptime(gop$Date,"%m/%d")
head(arrange(gop, desc(date)))
library(XML)
library(tidyr)
library(plyr)
library(stringr)
if (false) {
gop <- readHTMLTable('http://www.realclearpolitics.com/epolls/2016/president/
us/2016_republican_presidential_nomination-3823.html#polls')
gop_data <- gop[[6]]
vector_to_num <- function(dataframe, column) {
dataframe$column <- as.numeric()
}
}
gop <- read.csv('gop.csv', na.strings = "--")
#get rid of last years data, because theres no year value
gop <- gop[1:56,]
#
gop <- gather(gop, candidate, points, Trump:Pataki)
#drop the spread column
gop <- cbind(gop[1:2], gop[4:5])
#get the dates in an enddate, thus more usable format
gop$Date <- str_extract(gop$Date, "[[:digit:]]{1,2}/[[:digit:]]{1,2}$")
#change points to numeric
gop$points <- as.numeric(gop$points)
gop$date <- strptime(gop$Date,"%m/%d")
head(arrange(gop, desc(date)))
library(XML)
library(tidyr)
library(plyr)
library(stringr)
if (false) {
gop <- readHTMLTable('http://www.realclearpolitics.com/epolls/2016/president/
us/2016_republican_presidential_nomination-3823.html#polls')
gop_data <- gop[[6]]
vector_to_num <- function(dataframe, column) {
dataframe$column <- as.numeric()
}
}
gop <- read.csv('gop.csv', na.strings = "--")
#get rid of last years data, because theres no year value
gop <- gop[1:56,]
#
gop <- gather(gop, candidate, points, Trump:Pataki)
#drop the spread column
gop <- cbind(gop[1:2], gop[4:5])
#get the dates in an enddate, thus more usable format
gop$Date <- str_extract(gop$Date, "[[:digit:]]{1,2}/[[:digit:]]{1,2}$")
#change points to numeric
gop$points <- as.numeric(gop$points)
gop$date <- strptime(gop$Date,"%m/%d")
head(arrange(gop, desc(date)))
library(XML)
library(tidyr)
library(plyr)
library(stringr)
if (false) {
gop <- readHTMLTable('http://www.realclearpolitics.com/epolls/2016/president/
us/2016_republican_presidential_nomination-3823.html#polls')
gop_data <- gop[[6]]
vector_to_num <- function(dataframe, column) {
dataframe$column <- as.numeric()
}
}
gop <- read.csv('gop.csv', na.strings = "--")
#get rid of last years data, because theres no year value
gop <- gop[1:55,]
#
gop <- gather(gop, candidate, points, Trump:Pataki)
#drop the spread column
gop <- cbind(gop[1:2], gop[4:5])
#get the dates in an enddate, thus more usable format
gop$Date <- str_extract(gop$Date, "[[:digit:]]{1,2}/[[:digit:]]{1,2}$")
#change points to numeric
gop$points <- as.numeric(gop$points)
gop$date <- strptime(gop$Date,"%m/%d")
head(arrange(gop, desc(date)))
library(XML)
library(tidyr)
library(plyr)
library(stringr)
if (false) {
gop <- readHTMLTable('http://www.realclearpolitics.com/epolls/2016/president/
us/2016_republican_presidential_nomination-3823.html#polls')
gop_data <- gop[[6]]
vector_to_num <- function(dataframe, column) {
dataframe$column <- as.numeric()
}
}
gop <- read.csv('gop.csv', na.strings = "--")
#get rid of last years data, because theres no year value
gop <- gop[1:55,]
#
gop <- gather(gop, candidate, points, Trump:Pataki)
#drop the spread column
gop <- cbind(gop[1:2], gop[4:5])
#get the dates in an enddate, thus more usable format
gop$Date <- str_extract(gop$Date, "[[:digit:]]{1,2}/[[:digit:]]{1,2}$")
#change points to numeric
gop$points <- as.numeric(gop$points)
gop$Date <- strptime(gop$Date,"%m/%d")
head(arrange(gop, desc(date)))
head(arrange(gop, desc(Date)))
max(gop$points)
max(gop$points, na.rm=TRUE)
head(gop)
library(dplyr)
trump <- filter(candidate == Trump & points != NA)
trump <- filter(gop$candidate == Trump & gop$points != NA)
trump <- filter(gop$candidate == 'Trump' & gop$points != NA)
trump <- filter(gop$candidate == "Trump" & gop$points != NA)
?filter
trump <- filter(gop, gop$candidate == "Trump" & gop$points != NA)
?subset
subset(gop, candidate == "Trump" & points != NA)
subset(gop, candidate == "Trump")
subset(gop, candidate == "Trump" & !is.na(points)
)
install.packages('ggplot2')
library('ggplot2')
?geom_line
aes(trump$Date, trump$points)
?"ggplot"
ggplot(gop, aes(Date, points))
ggplot(data=gop, aes(x=Date, y=points))
gg <- ggplot(data=gop, aes(x=Date, y=points))
g + geom_point()
gg + geom_point()
gg <- ggplot(data=trump, aes(x=Date, y=points))
trump <- subset(gop, candidate == "Trump" & !is.na(points))
gg <- ggplot(data=trump, aes(x=Date, y=points))
gg + geom_point()
rubio <- subset(gop, candidate == "Rubio" & !is.na(points))
gg <- ggplot(data=rubio, aes(x=Date, y=points))
gg + geom_point()
library(XML)
library(tidyr)
library(plyr)
library(dplyr)
library(stringr)
library(ggplot2)
if (false) {
gop <- readHTMLTable('http://www.realclearpolitics.com/epolls/2016/president/
us/2016_republican_presidential_nomination-3823.html#polls')
gop_data <- gop[[6]]
vector_to_num <- function(dataframe, column) {
dataframe$column <- as.numeric()
}
}
gop <- read.csv('gop.csv', na.strings = "--")
#get rid of last years data, because theres no year value
gop <- gop[1:55,]
#
gop <- gather(gop, candidate, points, Trump:Pataki)
#drop the spread column
gop <- cbind(gop[1:2], gop[4:5])
#get the dates in an enddate, thus more usable format
gop$Date <- str_extract(gop$Date, "[[:digit:]]{1,2}/[[:digit:]]{1,2}$")
#change the dates to POSIX dates (so i can order them)
gop$Date <- strptime(gop$Date,"%m/%d")
#change points to numeric
gop$points <- as.numeric(gop$points)
trump <- subset(gop, candidate == "Trump" & !is.na(points))
rubio <- subset(gop, candidate == "Rubio" & !is.na(points))
bush <- subset(gop, candidate == "Bush" & !is.na(points))
carson <- subset(gop, candidate == "Carson" & !is.na(points))
fiorina <- subset(gop, candidate == "Fiorina" & !is.na(points))
cruz <- subset(gop, candidate == "Cruz" & !is.na(points))
gg <- ggplot(data=trump, aes(x=Date, y=points))
gg + geom_point()
gg <- ggplot(data=fiorina, aes(x=Date, y=points))
gg + geom_point()
gg <- ggplot(data=bush, aes(x=Date, y=points))
gg + geom_point()
gg <- ggplot(data=cruz, aes(x=Date, y=points))
gg + geom_point()
gg <- ggplot(data=carson, aes(x=Date, y=points))
gg + geom_point()
gg <- ggplot(data=trump, aes(x=Date, y=points))
gg + geom_point()
gg <- ggplot(data=bush, aes(x=Date, y=points))
gg + geom_point()
gg <- ggplot(data=carson, aes(x=Date, y=points))
gg + geom_point()
gg <- ggplot(data=rubio, aes(x=Date, y=points))
gg + geom_point()
gg + geom_point()
gg + geom_point(trump, colour ='red')
gg + geom_point(data=trump, colour ='red')
geom_point(data=trump, colour ='red') + geom_point(data=carson, colours='blue')
geom_point(data=trump, colour ='red') + geom_point(data=carson, colour='blue')
gg + geom_point(data=trump, colour ='red') + geom_point(data=carson, colour='blue')
gg + geom_point(data=trump, colour ='red') + geom_point(data=rubio, colour='blue')
gg + geom_point(data=trump, colour ='red') + geom_point(data=cruz, colour='blue')
gg + geom_point(data=rubio, colour ='red') + geom_point(data=carson, colour='blue')
gg + geom_point(data=fiorina, colour ='red') + geom_point(data=carson, colour='blue')
gg + geom_point(data=fiorina, colour ='red') + geom_point(data=rubio, colour='blue')
gg + geom_point(data=fiorina, colour ='red') + geom_point(data=rubio, colour='blue') + geom_point(data=trump, colour='gold')
gg + geom_point(data=fiorina, colour ='red') + geom_point(data=rubio, colour='blue') + geom_point(data=trump, colour='gold') + geom_point(data=carson, colour='green')
gg + geom_point(data=fiorina, colour ='red') + geom_point(data=rubio, colour='blue') + geom_point(data=trump, colour='gold') + geom_point(data=carson, colour='green') + geom_point(data=bush, colour='black')
library(XML)
library(tidyr)
library(plyr)
library(dplyr)
library(stringr)
library(ggplot2)
if (false) {
gop <- readHTMLTable('http://www.realclearpolitics.com/epolls/2016/president/
us/2016_republican_presidential_nomination-3823.html#polls')
gop_data <- gop[[6]]
vector_to_num <- function(dataframe, column) {
dataframe$column <- as.numeric()
}
}
gop <- read.csv('gop.csv', na.strings = "--")
#get rid of last years data, because theres no year value
gop <- gop[1:55,]
#
gop <- gather(gop, candidate, points, Trump:Pataki)
#drop the spread column
gop <- cbind(gop[1:2], gop[4:5])
#get the dates in an enddate, thus more usable format
gop$Date <- str_extract(gop$Date, "[[:digit:]]{1,2}/[[:digit:]]{1,2}$")
#change the dates to POSIX dates (so i can order them)
gop$Date <- strptime(gop$Date,"%m/%d")
#change points to numeric
gop$points <- as.numeric(gop$points)
trump <- subset(gop, candidate == "Trump" & !is.na(points))
rubio <- subset(gop, candidate == "Rubio" & !is.na(points))
bush <- subset(gop, candidate == "Bush" & !is.na(points))
carson <- subset(gop, candidate == "Carson" & !is.na(points))
fiorina <- subset(gop, candidate == "Fiorina" & !is.na(points))
cruz <- subset(gop, candidate == "Cruz" & !is.na(points))
gg <- ggplot(data=trump, aes(x=Date, y=points))
gg + geom_point()
gg + geom_point(data=fiorina, colour ='red') + geom_point(data=rubio, colour='blue')
horse_race <- gg + geom_point(data=fiorina, colour ='red') +
geom_point(data=rubio, colour='blue') +
geom_point(data=trump, colour='gold') +
geom_point(data=carson, colour='green') +
geom_point(data=bush, colour='black')
horse_race
mlb <- read.csv('mlb.csv')
head(mlb)
subset(mlb, Year='Year')
subset(mlb, Year=='Year')
subset(mlb, Year!='Year')
mlb <- subset(read.csv('mlb.csv'), Year != 'Year')
mlb$Year
str(mlb)
mlb <- subset(read.csv('mlb.csv', stringsAsFactors = FALSE), Year != 'Year')
str(mlb)
mlb_year <- as.numeric(mlb$Year)
mean(mlb_year)
mlb_numeric <- fucntion(df){
return df
}
?sapply
test_mlb <- lapply(mlb, function (x) as.numeric(x))
str(test_mlb)
tbl_df(gather(mlb, team, wins, ARI:WSN))
tbl_df(gop)
View(mlb)
View(test_mlb)
tidy_mlb <- gather(mlb, team, wins, ARI:WSN)
View(tidy_mlb)
red_sox <- subset(tidy_mlb, team='BOS')
tidy_mlb[,win_pct] <- tidy_mlb$wins / tidy_mlb$G
View(gop)
source('~/Data Science/Fall 2015/IS 607 Data Acquisition and Management/Project 2/cars.r')
str(tidy_mlb)
str(mlb)
tidy_mlb <-gather(mlb, team, wins, ARI:WSN)
?gather
tidy_mlb <-gather_(mlb, team, wins, ARI:WSN)
tbl_df(gather(mlb, team, wins, ARI:WSN))
source('~/Data Science/Fall 2015/IS 607 Data Acquisition and Management/Project 2/cars.r')
head(mlb)
tbl_df(mlb)
mlb <- cbind(mlb)
str(mlb)
source('~/Data Science/Fall 2015/IS 607 Data Acquisition and Management/Project 2/cars.r')
mlb <- as.data.frame.list(mlb)
source('~/Data Science/Fall 2015/IS 607 Data Acquisition and Management/Project 2/cars.r')
tbl_df(tidy_mlb)
tidy_mlb[,win_pct] <- mlb$wins / mlb$G
tidy_mlb$win_pct <- mlb$wins / mlb$G
tidy_mlb[,win_pct] <- tidy_mlb$wins / tidy_mlb$G
tidy_mlb[,'win_pct'] <- tidy_mlb$wins / tidy_mlb$G
head(arrange(tidy_mlb, desc(win_pct)))
head(arrange(subset(tidy_mlb, Year >= 1980, desc(win_pct)))
)
head(arrange(subset(tidy_mlb, Year >= 1980), desc(win_pct))
)
source('~/Data Science/Fall 2015/IS 607 Data Acquisition and Management/Project 2/cars.r')
head(arrange(subset(tidy_mlb, Year >= 1980 & team == 'BOS'), desc(win_pct)))
head(arrange(subset(tidy_mlb, Year >= 1980 & team == 'BOS'), desc(win_pct)))
source('~/Data Science/Fall 2015/IS 607 Data Acquisition and Management/Project 2/cars.r')
head(arrange(subset(tidy_mlb, Year >= 1980 & team == 'BOS'), desc(win_pct)))
head(arrange(subset(tidy_mlb, Year >= 1980 & team == 'BOS'), win_pct))
source('~/Data Science/Fall 2015/IS 607 Data Acquisition and Management/Project 2/cars.r')
head(arrange(subset(tidy_mlb, Year >= 1980), win_pct))
mlb_80 <- subset(tidy_mlb, Year >= 1980)
boston <- subset(mlb_80, team == )
boston <- subset(mlb_80, team == 'BOS')
nyy <- subset(mlb_80, team == 'NYY')
table(boston$wins > nyy$wins)
source('~/Data Science/Fall 2015/IS 607 Data Acquisition and Management/Project 2/cars.r')
source('~/Data Science/Fall 2015/IS 607 Data Acquisition and Management/Project 2/baseball.r')
ls()
trade_data <- read.csv("International Trade in Goods and Services.csv",
stringsAsFactors = FALSE)
table_df(trade_data)
tbl_df(trade_data)
View(trade_data)
trade_data <- read.csv("International Trade in Goods and Services.csv",
stringsAsFactors = FALSE,
blank.lines.skip=TRUE)
View(trade_data)
library(XML)
library(tidyr)
library(plyr)
library(dplyr)
library(stringr)
library(ggplot2)
trade_data <- read.csv("International Trade in Goods and Services.csv",
stringsAsFactors = FALSE,
blank.lines.skip=TRUE)
new_trade <- subset(trade_data, X2013 != "")
tbl_df(new_trade)
subset(trade_data, Period != "" & X == "Services")
subset(trade_data, Period == "" & X == "Services")
subset(trade_data, X == "Services")
str(new_trade)
View(new_trade)
source('~/Data Science/Fall 2015/IS 607 Data Acquisition and Management/Project 2/us_trade.r')
tbl_df(trade_data)
trade_data_blank_month <- subset(trade_data, Period != 1 & (Period % 2) == 1)
trade_data_blank_month <- subset(trade_data, Period != 1 & (Period %% 2) == 1)
trade_data_blank_month$Period %% 2
trade_data$Period %% 2
trade_data$Period
which(trade_data$Period)
?which
arrayInd(trade$Period)
arrayInd(trade_data$Period)
which(is.NA(trade_data$Period) == FALSE)
which(is.na(trade_data$Period) == FALSE)
str(which(is.na(trade_data$Period) == FALSE))
period_index <- which(is.na(trade_data$Period) == FALSE)
trade_data_blank_month <- subset(period_index, period_index != 1 & (period_index % 2) == 1)
?subset
period_index[!= 1]
period_index[period_index == 1]
tbl_df(trade_data)
trade_data$Period
trade_data$Period[3,5,7,9]
trade_data$Period[c(3,5,7,9)]
trade_data$Period[c(3,5,7,9)] <- c("January", "February","March","April")
trade_data$Period
trade_data$Period[c(3,5,7,9)] <- c("January", "February","March","April")
tbl_df(trade_data)
colnames(trade_data$X) <- "Goods/Services"
colnames(trade_data)[2] <- "Goods/Services"
colnames(trade_data)[3:8] <- c("2013 Exports","2013 Imports","2014 Exports",
"2014 Imports","2015 Exports", "2015 Imports")
table_df(trade_data)
tbl_df(trade_data)
trade_data <- trade_data[2:]
trade_data <- trade_data[2::]
trade_data <- trade_data[2:9]
trade_data <- trade_data[2:9,]
source('~/Data Science/Fall 2015/IS 607 Data Acquisition and Management/Project 2/us_trade.r')
View(trade_data)
head(trade_data)
source('~/Data Science/Fall 2015/IS 607 Data Acquisition and Management/Project 2/us_trade.r')
View(trade_data)
rownames(trade_data) <- 1:nrows(trade_data)
rownames(trade_data) <- 1:8
View(trade_data)
View(trade_data)
gather(trade_data, "Year/Type", "Total", "2013 Exports":"2015 Imports")
?gather()
gather(trade_data, "Year/Type", "Total", trade_data[,3:8])
?gather
gather(trade_data, "Year/Type", "Total", [3:8])
gather(trade_data, "Year/Type", "Total")
gather(trade_data, "Year/Type", "Total", -Period)
gather(trade_data, "Year/Type", "Total", -Period, -Goods/Services)
gather(trade_data, "Year/Type", "Total", -Period, -'Goods/Services')
gather(trade_data, "Year/Type", "Total", -Period, -"Goods/Services")
source('~/Data Science/Fall 2015/IS 607 Data Acquisition and Management/Project 2/us_trade.r')
gather(trade_data, "Year/Type", "Total", -Period, -goods_services)
tidy_trade <- gather(trade_data, "Year/Type", "Total", -Period, -goods_services)
separate(tidy_trade, goods_services, into = c("year", "import_export"), sep = "[[:space:]]")
?separate()
separate(tidy_trade, "Year/Type", into = c("year", "import_export"), sep = "[[:space:]]")
?spread()
spread(tidy_trade, goods_services, Total)
library(XML)
library(tidyr)
library(plyr)
library(dplyr)
library(stringr)
library(ggplot2)
#read in data
trade_data <- read.csv("International Trade in Goods and Services.csv",
stringsAsFactors = FALSE)
#remove blank rows
trade_data <- subset(trade_data, X2013 != "")
#fill in missing months
trade_data$Period[c(3,5,7,9)] <- c("January", "February","March","April")
#rename some column names
colnames(trade_data)[2] <- "goods_services"
colnames(trade_data)[3:8] <- c("2013 Exports","2013 Imports","2014 Exports",
"2014 Imports","2015 Exports", "2015 Imports")
trade_data <- trade_data[2:9,]
#reset the row names
rownames(trade_data) <- 1:8
#run a gather function
tidy_trade <- gather(trade_data, "Year/Type", "Total", -Period, -goods_services)
tidy_trade <- separate(tidy_trade, "Year/Type",
into = c("year", "import_export"),
sep = "[[:space:]]")
spread(tidy_trade, goods_services, Total)
source('~/Data Science/Fall 2015/IS 607 Data Acquisition and Management/Project 2/us_trade.r')
View(tidy_trade)
mean(subset(tidy_trade$Goods, import_export == 'Exports'))
source('~/Data Science/Fall 2015/IS 607 Data Acquisition and Management/Project 2/us_trade.r')
mean(exports$Goods)
head(exports$Goods)
str(tidy_trade)
str(tidy_trade[,4:5])
tidy_trade[4:5] <- as.numeric(tidy_trade[4:5])
?as.numeric
tidy_trade[4] <- as.numeric(tidy_trade[4])
tidy_trade[4] <- unlist(as.numeric(tidy_trade[4]))
str(tidy_trade[4])
str(tidy_trade[[4])
str(tidy_trade[[4]])
tidy_trade[4] <- unlist(as.numeric(tidy_trade[[4]]))
tidy_trade[4] <- as.numeric(tidy_trade[[4]])
tidy_trade[4]
?read.csv
?str_replace
a < 1,00,00
a < "1,00,00"
a <- "1,00,00"
str_replace(a, ",")
str_replace(a, ",", "")
str_replace_all(a, ",", "")
tidy_trade[,4:5] <- str_replace_all(tidy_trade[,4:5], ",", "")
source('~/Data Science/Fall 2015/IS 607 Data Acquisition and Management/Project 2/us_trade.r')
tidy_trade[,4:5] <- str_replace_all(tidy_trade[,4:5], ",", "")
tidy_trade[,4]
source('~/Data Science/Fall 2015/IS 607 Data Acquisition and Management/Project 2/us_trade.r')
tbl_df(tidy_trade)
a <- str_replace_all(tidy_trade[1,4], ",", "")
tbl_df(tidy_trade)
a
new_vector <- str_replace(tidy_trade$Goods, ",", "")
tidy_trade$Goods
tidy_trade$Goods <- str_replace(tidy_trade$Goods, ",", "")
source('~/Data Science/Fall 2015/IS 607 Data Acquisition and Management/Project 2/us_trade.r')
tidy_trade$Goods <- str_replace(tidy_trade$Goods, ",", "")
source('~/Data Science/Fall 2015/IS 607 Data Acquisition and Management/Project 2/us_trade.r')
source('~/Data Science/Fall 2015/IS 607 Data Acquisition and Management/Project 2/us_trade.r')
tidy_trade$'Goods ' <- str_replace(tidy_trade$'Goods ', ",", "")
tidy_trade$'Services ' <- str_replace(tidy_trade$'Services ', ",", "")
tidy_trade$Services  <- str_replace(tidy_trade$Services , ",", "")
source('~/Data Science/Fall 2015/IS 607 Data Acquisition and Management/Project 2/us_trade.r')
tidy_trade$Services  <- as.numeric(str_replace(tidy_trade$Services , ",", ""))
source('~/Data Science/Fall 2015/IS 607 Data Acquisition and Management/Project 2/us_trade.r')
mean(exports$`Goods `)
mean(imports$Goods)
source('~/Data Science/Fall 2015/IS 607 Data Acquisition and Management/Project 2/us_trade.r')
source('~/Data Science/Fall 2015/IS 607 Data Acquisition and Management/Project 2/us_trade.r')
```
library('IS606')
install.packages(c('openintro','OIdata','devtools','ggplot2','psych','reshape2',
'knitr','markdown'))
devtools::install_github("jbryer/IS606")
install.packages(c("openintro", "OIdata", "devtools", "ggplot2",
'psych','reshape2',
'knitr','markdown'))
devtools::install_github("jbryer/IS606")
install.packages('shiny')
devtools::install_github("jbryer/IS606")
library('IS606')
getLabs()
start('Lab4a')
start("Lab4a")
startLab("Lab4a")
